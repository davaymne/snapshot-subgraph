"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RetryError = exports.RpcConnectionError = exports.RpcError = exports.RpcProtocolError = void 0;
/**
 * Server violated RPC protocol
 */
class RpcProtocolError extends Error {
    constructor(code, msg) {
        super(msg);
        this.code = code;
    }
    get name() {
        return 'RpcProtocolError';
    }
}
exports.RpcProtocolError = RpcProtocolError;
/**
 * Received error message from the server
 */
class RpcError extends Error {
    constructor(info) {
        super(info.message);
        this.code = info.code;
        this.data = info.data;
    }
    get name() {
        return 'RpcError';
    }
}
exports.RpcError = RpcError;
/**
 * Transport problem
 */
class RpcConnectionError extends Error {
    get name() {
        return 'RpcConnectionError';
    }
}
exports.RpcConnectionError = RpcConnectionError;
/**
 * This error can be thrown from `CallOptions.validateResult()` to invoke built-in
 * retry machinery
 */
class RetryError extends Error {
}
exports.RetryError = RetryError;
//# sourceMappingURL=errors.js.map